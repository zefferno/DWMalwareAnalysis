namespace w.My
{
    using Microsoft.VisualBasic;
    using Microsoft.VisualBasic.ApplicationServices;
    using Microsoft.VisualBasic.CompilerServices;
    using System;
    using System.CodeDom.Compiler;
    using System.ComponentModel;
    using System.ComponentModel.Design;
    using System.Diagnostics;
    using System.Runtime.CompilerServices;
    using System.Runtime.InteropServices;

    [HideModuleName, GeneratedCode("MyTemplate", "8.0.0.0"), StandardModule]
    internal sealed class Class2
    {
        private static readonly object object_0 = new ThreadSafeObjectProvider<Class0>();
        private static readonly object object_1 = new ThreadSafeObjectProvider<User>();
        private static readonly object object_2 = new ThreadSafeObjectProvider<Class1>();
        private static readonly object object_3 = new ThreadSafeObjectProvider<MyWebServices>();

        [HelpKeyword("My.Computer")]
        internal static object Object_0
        {
            [DebuggerHidden]
            get
            {
                return object_2.GetInstance;
            }
        }

        [HelpKeyword("My.Application")]
        internal static object Object_1
        {
            [DebuggerHidden]
            get
            {
                return object_0.GetInstance;
            }
        }

        [HelpKeyword("My.User")]
        internal static object Object_2
        {
            [DebuggerHidden]
            get
            {
                return object_1.GetInstance;
            }
        }

        [HelpKeyword("My.WebServices")]
        internal static object Object_3
        {
            [DebuggerHidden]
            get
            {
                return object_3.GetInstance;
            }
        }

        [EditorBrowsable(EditorBrowsableState.Never), MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
        internal sealed class MyWebServices
        {
            [DebuggerHidden]
            private static T Create__Instance__<T>(T instance) where T: new()
            {
                if (instance == null)
                {
                    return Activator.CreateInstance<T>();
                }
                return instance;
            }

            [DebuggerHidden]
            private void Dispose__Instance__<T>(ref T instance)
            {
                instance = default(T);
            }

            [DebuggerHidden, EditorBrowsable(EditorBrowsableState.Never)]
            public override bool Equals(object o)
            {
                return base.Equals(RuntimeHelpers.GetObjectValue(o));
            }

            [EditorBrowsable(EditorBrowsableState.Never), DebuggerHidden]
            public override int GetHashCode()
            {
                return base.GetHashCode();
            }

            [EditorBrowsable(EditorBrowsableState.Never), DebuggerHidden]
            internal Type GetType()
            {
                return typeof(Class2.MyWebServices);
            }

            [EditorBrowsable(EditorBrowsableState.Never), DebuggerHidden]
            public override string ToString()
            {
                return base.ToString();
            }
        }

        [ComVisible(false), EditorBrowsable(EditorBrowsableState.Never)]
        internal sealed class ThreadSafeObjectProvider<T> where T: new()
        {
            [ThreadStatic, CompilerGenerated]
            private static T m_ThreadStaticValue;

            internal T GetInstance
            {
                [DebuggerHidden]
                get
                {
                    if (Class2.ThreadSafeObjectProvider<T>.m_ThreadStaticValue == null)
                    {
                        Class2.ThreadSafeObjectProvider<T>.m_ThreadStaticValue = Activator.CreateInstance<T>();
                    }
                    return Class2.ThreadSafeObjectProvider<T>.m_ThreadStaticValue;
                }
            }
        }
    }
}

